version: "3.8"

services:
    ibf-api-service:
        command: ["npm", "run", "start:dev"]
        environment:
            - NODE_ENV=development
        volumes:
            - ./services/API-service:/home/ibf/api-service
        ports:
            - 3000:3000
        depends_on:
            - ibf-local-db
        networks:
            - web-server-network
            - pipeline-network

    ibf-dashboard:
        command: ["npm", "run", "start"]
        environment:
            - NG_CONFIGURATION=development
        ports:
            - 4200:4200
        volumes:
            - ./interfaces/IBF-dashboard:/home/node/app

    ibf-pipeline:
        ports:
            - 5432:5432
        volumes:
            - ./services/IBF-pipeline:/home/ibf

    ibf-geoserver:
        ports:
            - 8081:8080
        volumes:
            - ./services/IBF-pipeline/geoserver/geodata:/opt/geoserver/data_dir/workspaces/ibf-system/ibf-pipeline
            - ./services/IBF-pipeline/geoserver/workspaces/ibf-system:/opt/geoserver/data_dir/workspaces/ibf-system

    nginx:
        volumes:
            - ./nginx/conf.d:/etc/nginx/user.conf.d
            - ./nginx/letsencrypt:/etc/letsencrypt

    ibf-local-db:
        image: "postgis/postgis"
        environment:
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_DATABASE}
        volumes:
            - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
        ports:
            - "5437:5432"
        networks:
            - pipeline-network
